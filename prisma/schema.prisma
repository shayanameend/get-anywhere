generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(cuid())
  stripeCustomerId String?   @unique
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  orders           Order[]
  accounts         Account[]
  sessions         Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Order {
  id              String   @id @default(cuid())
  paymentIntentId String   @unique
  userId          String
  user            User     @relation(fields: [userId], references: [id])
  price           Float
  currency        String
  status          String
  createdAt       DateTime @default(now())
  items           Item[]
}

model Item {
  id          String  @id @default(cuid())
  name        String
  description String
  image       String
  price       Float
  currency    String
  quantity    Int
  orders      Order[]
}
